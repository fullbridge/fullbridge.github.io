/* ==========================================================================
   Navigation
   ========================================================================== */

.column.sidebar,
.columns.sidebar
{
    &.fixed
    {
        @include bp(desktop)
        {
            position: fixed;
            height: 100%;
            padding-right: ($gutter/2);
            padding-left: 0;
            
            @include transform(translate(0%,0%));

            [dir=rtl] &
            {
                left: auto;
                right: 0;
                padding-right: 0;
                padding-left: ($gutter/2);
            }
        }

        &.top-bar-push
        {
            @include bp(desktop)
            {
                height: calc(100% - $menu-bar-height);
            }
        }

        .side-nav
        {
            @include bp(desktop)
            {
                height: 100%;

                @include vertical-scroll;
            }
        }
    }

    [dir=rtl] & + .column,
    [dir=rtl] & + .columns
    {
        float: left;
    }
}

.side-nav
{
    background-color: darken(white,3%);

    @include font(body);

    > header,
    > footer
    {
        margin: 0;
        padding: $row-spacing ($gutter/2);
    }

    > footer
    {
        @include bp(small)
        {
            display: none;
        }
    }

    > header
    {
        color: $heading-color;

        @include font(heading,bold);

        @include bp(small)
        {
            cursor: pointer;
        }

        &.open + nav,
        &.open ~ footer
        {
            @include bp(small)
            {
                display: block;
            }
        }
    }

    > nav
    {
        @include bp(small)
        {
            display: none;
        }

        a
        {
            display: block;
            position: relative;
            color: $body-text-color;
            text-decoration: none;
        }

        ul
        {
            margin: 0;
            padding: 0;

            li
            {
                position: relative;
                margin: 0;
                padding: 0;
                line-height: 1.2;
                font-size: .9em;

                &.divider
                {
                    margin: ($row-spacing*2) auto;
                    border-top: $light-divider;

                    &:first-of-type
                    {
                        margin-top: 0;
                    }

                    &:last-of-type
                    {
                        margin-bottom: 0;
                    }
                }

                a
                {
                    &:before
                    {
                        display: block;
                        position: absolute;
                        top: 0;
                        left: 0;
                        bottom: 0;
                        width: 0;
                        content: '';
                        background-color: $heading-color;

                        [dir=rtl] &
                        {
                            right: 0;
                            left: auto;
                        }
                    }

                    html:not(.touch) &:hover
                    {
                        background-color: $hover-bg-color;

                        @include transition(background-color $timing);

                        & + .arrow
                        {
                            background-color: rgba(black,.1);

                            @include transition(background-color $timing);
                        }
                    }

                    &.current
                    {
                        color: $heading-color !important;
                        background-color: $background-color;

                        &:before
                        {
                            width: .3em;

                            @include transition(width $timing);
                        }
                    }

                    &.unavailable
                    {
                        color: $gray-regular;
                        cursor: not-allowed;
                    }
                }

                .arrow
                {
                    position: absolute;
                    top: .2em;
                    left: .5em;
                    width: 1.9em;
                    line-height: 2;
                    text-align: center;
                    cursor: pointer;
                    z-index: 1;

                    [dir=rtl] &
                    {
                        right: .5em;
                        left: auto;
                    }

                    html:not(.touch) &:hover
                    {
                        background-color: $hover-bg-color;
                    }

                    &:before
                    {
                        content: '\e618';

                        @include font(icon,regular);
                    }

                    &.open:before
                    {
                        content: '\e619';
                    }

                    &.open ~ ul
                    {
                        display: block;
                        position: relative;

                        @include animation(open $timing ease-out);
                    }

                    &.open + a
                    {
                        color: $heading-color;
                        text-decoration: underline;
                        font-weight: bold;
                    }
                }
            }
        }

        > ul
        {
            > li
            {
                > a
                {
                    padding: $row-spacing 1em $row-spacing 2.8em;

                    @include font(heading,regular);

                    [dir=rtl] &
                    {
                        padding: $row-spacing 2.8em $row-spacing 1em;
                    }
                }

                > ul
                {
                    display: none;

                    > li
                    {
                        a
                        {
                            padding: $row-spacing 1em $row-spacing 3.1em;

                            [dir=rtl] &
                            {
                                padding: $row-spacing 3.1em $row-spacing 1em;
                            }

                            &:after
                            {
                                position: absolute;
                                top: $row-spacing;
                                left: 1.6em;

                                @include font(icon,regular);

                                [dir=rtl] &
                                {
                                    right: 1.6em;
                                    left: auto;
                                }
                            }

                            &.done:after,
                            &.active:after
                            {
                                content: '\e60c';
                            }

                            &.active:after,
                            &.unavailable:after
                            {
                                color: $gray-light;
                            }

                            &.done:after
                            {
                                color: $link-color;
                            }

                            &.current:after
                            {
                                color: $heading-color;
                                content: '\e60b';
                            }

                            &.unavailable:after
                            {
                                content: '\e601';
                            }
                        }
                    }
                }
            }
        }
    }
}

/*.menu-bar
{
    position: fixed;
    width: 100%;
    height: $menu-bar-height;
    padding: 0 ($gutter/2);
    color: white;
    line-height: 3;
    background-color: $secondary-color;
    z-index: 1;

    @include transform(translate(0%,0%));

    & + .content
    {
        padding-top: $menu-bar-height;

        .fixed
        {
            @include bp(desktop)
            {
                height: calc(100% - 3em);
            }
        }
    }
}*/